#!/usr/bin/python3

import sys
import socket
import select
import time
import random
import numpy as np
import math
import os
os.environ['TF_CPP_MIN_LOG_LEVEL'] = '3'
import tensorflow as tf
import zappy_parsing as zp
import zappy_network_utils as znu
import zappy_commands as zc
import zappy_dataStruct as zds

# class Player:
#     X = 0
#     Y = 0
#     LVL = 1
#     ORIENT = 0 # 0 = N, 1 = E, 2 = S, 3 = W
#     INV = [0, 0, 0, 0, 0, 0, 0]
#     TEAM = ""
#     VISION = []
#     VISION_SIZE = 0
#     VISION_CENTER = 0
#     PLAYER_NB = 0
#     LIFE_UNIT = 10

def find_food(p: zds.Player, map_str: str):
    for line in map_str:
        for cell in line:
            if cell == "food":
                zp.print_log("Found food")
                return

def go_ai(p: zds.Player, map_str: str, map_x: int, map_y: int):
    while True:
        map_str = zc.look(p.client.sock, map_x, map_y)
        find_food(p, map_str)
        time.sleep(1)

def main():
    args = zp.get_args()
    p = zds.Player(args["port"], args["name"], args["machine"])
    p.client.sock = znu.con_to_server(p.client.machine, p.client.port)
    znu.recv_from_server(p.client.sock)
    p_infos = znu.get_player_infos(p.client.sock, p.stats.team)
    zp.print_log("Player: {}".format(p_infos))
    client_num, map_x, map_y = zp.parse_player_infos(p_infos)
    p.stats.playerNB = client_num
    zc.right(p.client.sock)
    map_str = zc.look(p.client.sock, map_x, map_y)


main()

# IA :
# ia verif si y'en a une
# verif buffer sellect
# algo simple ? random ou analyse map ? algo attentif ? algo très complexe ou lib externe ?

# Les IA peuvent s'attaquer entre elles ?
# Jusqu'à quel LVL on peut monter ?